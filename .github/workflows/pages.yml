name: Build and Package Application

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN
permissions:
  contents: read

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown
      
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      
      - name: Install Trunk
        run: |
          cargo install --locked trunk
          trunk --version
      
      - name: Build with Trunk
        run: |
          # Use our build script instead of trunk
          chmod +x build.sh
          ./build.sh
          
          # Create a dist directory
          mkdir -p dist
          cp -r index.html pkg static dist/
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: ./dist
          retention-days: 7
      
      - name: Create deployment instructions
        run: |
          echo "## Deployment Instructions" > DEPLOYMENT.md
          echo "" >> DEPLOYMENT.md
          echo "This application is built and ready to be deployed. You can deploy it using any static web server." >> DEPLOYMENT.md
          echo "" >> DEPLOYMENT.md
          echo "### Local Deployment" >> DEPLOYMENT.md
          echo "" >> DEPLOYMENT.md
          echo "1. Download the artifact from this workflow run" >> DEPLOYMENT.md
          echo "2. Extract the contents to a directory" >> DEPLOYMENT.md
          echo "3. Serve the directory using a static web server, e.g.:" >> DEPLOYMENT.md
          echo "   ```bash" >> DEPLOYMENT.md
          echo "   python -m http.server 8000" >> DEPLOYMENT.md
          echo "   ```" >> DEPLOYMENT.md
          echo "4. Access the application at http://localhost:8000" >> DEPLOYMENT.md
          echo "" >> DEPLOYMENT.md
          echo "### GitHub Pages Deployment" >> DEPLOYMENT.md
          echo "" >> DEPLOYMENT.md
          echo "To deploy to GitHub Pages:" >> DEPLOYMENT.md
          echo "" >> DEPLOYMENT.md
          echo "1. Enable GitHub Pages for this repository in the repository settings" >> DEPLOYMENT.md
          echo "2. Configure GitHub Pages to use the 'GitHub Actions' source" >> DEPLOYMENT.md
          echo "3. The GitHub Actions workflow will automatically deploy the application to GitHub Pages" >> DEPLOYMENT.md
      
      - name: Upload deployment instructions
        uses: actions/upload-artifact@v4
        with:
          name: deployment-instructions
          path: DEPLOYMENT.md
          retention-days: 7