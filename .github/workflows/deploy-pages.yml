name: Deploy to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown
      
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      
      - name: Install Trunk
        run: |
          cargo install --locked trunk
          trunk --version
      
      - name: Build with Trunk
        run: |
          # Use our build script instead of trunk
          chmod +x build.sh
          ./build.sh
          
          # Create a dist directory for GitHub Pages
          mkdir -p dist
          cp -r index.html pkg static .nojekyll .htaccess web.config netlify.toml dist/
          
          # Create a .nojekyll file in the dist directory to prevent Jekyll processing
          touch dist/.nojekyll
          
          # Create a _headers file for Netlify/GitHub Pages to set correct MIME types
          cat > dist/_headers << EOF
          /*
            Access-Control-Allow-Origin: *
          
          /*.wasm
            Content-Type: application/wasm
          
          /*.js
            Content-Type: application/javascript
          EOF
          
          # Debug: List all files in the dist directory
          echo "Contents of dist directory:"
          ls -la dist/
          echo "Contents of dist/pkg directory:"
          ls -la dist/pkg/ || echo "pkg directory not found"
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4